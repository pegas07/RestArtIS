// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using RestArtIS.Server.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace RestArtIS.Server.Data
{
    public partial class RestArtISContext : DbContext
    {
        public RestArtISContext()
        {
        }

        public RestArtISContext(DbContextOptions<RestArtISContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<ItemPrice> ItemPrice { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Parlor> Parlor { get; set; }
        public virtual DbSet<PriceCategory> PriceCategory { get; set; }
        public virtual DbSet<RestArtItem> RestArtItem { get; set; }
        public virtual DbSet<RestArtItemCategory> RestArtItemCategory { get; set; }
        public virtual DbSet<Vat> Vat { get; set; }
        public virtual DbSet<BusinessPartner> BusinessPartner { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Company>(entity =>
            {
                entity.Property(e => e.CompanyId).ValueGeneratedNever();

                entity.Property(e => e.Name).HasMaxLength(100);
            });

            modelBuilder.Entity<ItemPrice>(entity =>
            {
                entity.Property(e => e.ItemPriceId).ValueGeneratedNever();

                entity.Property(e => e.Currency).HasMaxLength(50);

                entity.Property(e => e.ValidFrom).HasColumnType("datetime");

                entity.Property(e => e.ValidTo).HasColumnType("datetime");

                entity.Property(e => e.Value).HasColumnType("money");

                entity.Property(e => e.VatVid).HasColumnName("VatVId");
            });

            modelBuilder.Entity<Menu>(entity =>
            {
                entity.Property(e => e.MenuId).ValueGeneratedNever();

                entity.Property(e => e.DateFrom).HasColumnType("date");

                entity.Property(e => e.DateTo).HasColumnType("date");

                entity.Property(e => e.Name).HasMaxLength(250);

                entity.Property(e => e.VisibleFrom).HasColumnType("datetime");

                entity.Property(e => e.VisibleTo).HasColumnType("datetime");

                entity.HasOne(d => d.Parlor)
                    .WithMany(p => p.Menu)
                    .HasForeignKey(d => d.ParlorId)
                    .HasConstraintName("FK_Menu_Parlor");
            });

            modelBuilder.Entity<Parlor>(entity =>
            {
                entity.Property(e => e.ParlorId).ValueGeneratedNever();

                entity.Property(e => e.Code).HasMaxLength(50);

                entity.Property(e => e.Name).HasMaxLength(250);

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.Parlor)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK_Parlor_Company");
            });

            modelBuilder.Entity<PriceCategory>(entity =>
            {
                entity.Property(e => e.PriceCategoryId).ValueGeneratedNever();

                entity.Property(e => e.Name).HasMaxLength(250);

                entity.Property(e => e.Note).HasMaxLength(500);
            });

            modelBuilder.Entity<RestArtItem>(entity =>
            {
                entity.Property(e => e.RestArtItemId).ValueGeneratedNever();

                entity.Property(e => e.Alergens).HasMaxLength(50);

                entity.Property(e => e.Descrip).HasMaxLength(500);

                entity.Property(e => e.Name).HasMaxLength(250);

                entity.HasOne(d => d.ItemCategory)
                    .WithMany(p => p.RestArtItem)
                    .HasForeignKey(d => d.ItemCategoryId)
                    .HasConstraintName("FK_RestArtItem_RestArtItemCategory");
            });

            modelBuilder.Entity<RestArtItemCategory>(entity =>
            {
                entity.Property(e => e.RestArtItemCategoryId).ValueGeneratedNever();

                entity.Property(e => e.Name).HasMaxLength(250);
            });

            modelBuilder.Entity<Vat>(entity =>
            {
                entity.Property(e => e.VatId).ValueGeneratedNever();

                entity.Property(e => e.Name).HasMaxLength(250);

                entity.Property(e => e.Rate).HasColumnType("decimal(4, 2)");

                entity.Property(e => e.ValidFrom)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ValidTo).HasColumnType("datetime");
            });

            modelBuilder.Entity<BusinessPartner>(entity =>
            {
                entity.Property(e => e.BusinessPartnerId).ValueGeneratedNever();

                entity.Property(e => e.Name).HasMaxLength(250);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}